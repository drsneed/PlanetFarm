<html>
    <head>
        <title>Test</title>
        <style>

          div#hoop {
            prototype: Hoop;
            width:300dip;
            border:1px solid;
            height:300dip;
            overflow:hidden-scroll;
            font-size:16dip;
          }

          div#hoop > text {
            height:14dip;
          }

          div#hoop > text:last-child { background:gold }

        </style>
        <script type="text/tiscript">


         function inertia(el,cb) {
            var speed = 0;
            function step() {
              speed *= 0.92;
              var finishing = false;
              if( speed >= -1.0 && speed < 0.0 ) {
                speed = -1.0;
                finishing = true;
              }
              else if( speed > 0 && speed <= 1.0 ) {
                speed = 1.0;
                finishing = true;
              }
              if(!cb(speed,finishing))  { speed = 0; return false; }
              return true; 
            }
            function inc( d ) { 
              speed += d; 
              cb(speed,false);
              if( !el.state.animating )
                el.animate(step);
            }
            return inc; 
         }
         
         class Hoop: Element 
         {
            this var iHeight;
         
            function attached() 
            {
              for(var i in 48) 
                this.$append(<text>{i % 24}</text>);

              var me = this;
              
              function upd(speed, finishing) { 
                var sy,el;
                sy = me.scroll(#top) + speed;
                me.setPos(sy);
                if( finishing && (sy.toInteger() % me.itemHeight()) == 0) 
                  return false;
                return true;
              }
              
              this.inert = inertia(this,upd,pp); // returns func to update speed 
            }

            event mousewheel (evt) { this.inert(-7 * evt.wheelDelta); }

            function itemHeight() {
              if( this.iHeight === undefined && this.length)
                this.iHeight = this[0].box(#height,#border); 
              return this.iHeight || 30;
            }

            function setPos(sy) {
              sy = sy.toInteger();
              const viewHeight = this.scroll(#height); 
              const contentHeight = this.box(#height,#content); 
              const contentHeight2 = contentHeight / 2;
              sy += contentHeight2;
              sy %= contentHeight2;
              this.scrollTo(0,sy);
            }


         }

        </script>
    </head>
    <body>
      <div#hoop></div>
    </body>
</html>